//  Copyright(C) 2025 github.com/hidu  All Rights Reserved.
//  Author: hidu <duv123+git@gmail.com>
//  Date: 2025-10-25

package main

import (
	"bytes"
	"fmt"
	"go/format"

	"github.com/xanygo/anygo"
	"github.com/xanygo/anygo/ds/xstr"
)

func main() {
	Colors := []string{"Black", "Red", "Green", "Yellow", "Blue", "Magenta", "Cyan", "White"}
	bf := &bytes.Buffer{}
	bf.WriteString(tpl1)
	for _, color := range Colors {
		data := map[string]any{
			"Color": color,
		}
		str, err := xstr.RenderTemplate(tpl2, data)
		anygo.Must(err)
		bf.WriteString(str)
		bf.WriteString("\n\n")
	}
	code, err := format.Source(bf.Bytes())
	anygo.Must(err)
	fmt.Println(string(code))
}

const tpl1 = `
// Code generated by xcolor/codegen/main.go. DO NOT EDIT.

package xcolor
`

const tpl2 = `
func {{.Color}}(format string, a ...any) {
	printfln(getByID(CodeFg{{.Color}}),format,a...)
}

func Hi{{.Color}}(format string, a ...any) {
	printfln(getByID(CodeFgHi{{.Color}}),format,a...)
}

func Bg{{.Color}}(format string, a ...any) {
	printfln(getByID(CodeBg{{.Color}}),format,a...)
}

func BgHi{{.Color}}(format string, a ...any) {
	printfln(getByID(CodeBgHi{{.Color}}),format,a...)
}

func {{.Color}}String(format string, a ...any) string {
	return getByID(CodeFg{{.Color}}).Sprintf(format, a...)
}

func Hi{{.Color}}String(format string, a ...any) string {
	return getByID(CodeFgHi{{.Color}}).Sprintf(format, a...)
}

func Bg{{.Color}}String(format string, a ...any) string {
	return getByID(CodeBg{{.Color}}).Sprintf(format, a...)
}

func BgHi{{.Color}}String(format string, a ...any) string {
	return getByID(CodeBgHi{{.Color}}).Sprintf(format, a...)
}
`
