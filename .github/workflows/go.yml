# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on: ["push", "pull_request"]

jobs:

  linux:
    strategy:
      matrix:
        go: ['1.25']
        servers: [ "ubuntu-latest" ]
    runs-on: ${{ matrix.servers }}

    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        # 健康检查确保 Redis 启动完成后才执行测试
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
        if: startsWith(matrix.os, 'ubuntu')

    name: Go ${{ matrix.go }} On ${{ matrix.servers }}

    env:
      anygo-ut-redis: redis://127.0.0.1:6379

    steps:
    - name: Prepare git
      run: git config --global core.autocrlf false

    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}
        check-latest: true

    - name: GoVersion
      run: go version

    - name: Build
      run: go build -v ./...

    - name: Vet
      run: go vet ./...

    - name: staticCheck
      uses: dominikh/staticcheck-action@v1
      with:
        version: "latest"
        install-go: false
        cache-key: ${{ matrix.go }}
        working-directory: ${{ matrix.dir }}

    - name: Wait for Redis
      run: |
        for i in {1..10}; do
          if redis-cli ping; then
            echo "Redis is ready!"
            break
          fi
          echo "Waiting for Redis..."
          sleep 1
        done

    - name: Test
      run: go test -v -timeout=120s  -race ./...

  cross:
    strategy:
      matrix:
        go: ['1.25']
        servers: [ "windows-latest","macos-latest","macos-13"]
    runs-on: ${{ matrix.servers }}

    steps:
      - name: Prepare git
        run: git config --global core.autocrlf false

      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: GoVersion
        run: go version

      - name: Build
        run: go build -v ./...


      - name: Test
        run: go test -v -timeout=120s  -race ./...

